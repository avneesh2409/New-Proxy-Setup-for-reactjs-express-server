{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\avndv\\\\Desktop\\\\NodeJs\\\\New-Proxy-Setup-for-reactjs-express-server\\\\example-create-react-app-express\\\\client\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      response: '',\n      post: '',\n      responseToPost: '',\n      username: '',\n      password: '',\n      file: ''\n    };\n\n    this.callApi = async () => {\n      const response = await fetch('/api/hello');\n      const body = await response.json();\n      if (response.status !== 200) throw Error(body.message);\n      return body;\n    };\n\n    this.handleSubmit = async e => {\n      e.preventDefault();\n      var formData = new FormData();\n\n      for (let name in this.state) {\n        formData.append(name, this.state[name]);\n      }\n\n      console.log(formData);\n      const response = await fetch('/api/world', {\n        mode: 'no-cors',\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          post: this.state.post,\n          username: this.state.username,\n          password: this.state.password,\n          file: this.state.file\n        })\n      });\n      const body = await response.text();\n      this.setState({\n        responseToPost: body\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.callApi().then(res => this.setState({\n      response: res.express\n    })).catch(err => console.log(err));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"header\", {\n      className: \"App-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, \"Edit \", React.createElement(\"code\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"src/App.js\"), \" and save to reload.\"), React.createElement(\"a\", {\n      className: \"App-link\",\n      href: \"https://reactjs.org\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, \"Learn React\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, this.state.response), React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Post to Server:\")), React.createElement(\"input\", {\n      placeholder: \"enter a text\",\n      type: \"text\",\n      value: this.state.post,\n      onChange: e => this.setState({\n        post: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      placeholder: \"enter a username\",\n      type: \"text\",\n      value: this.state.username,\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      placeholder: \"enter the password\",\n      type: \"password\",\n      value: this.state.password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"Submit\")), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }, this.state.responseToPost));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/avndv/Desktop/NodeJs/New-Proxy-Setup-for-reactjs-express-server/example-create-react-app-express/client/src/App.js"],"names":["React","Component","App","state","response","post","responseToPost","username","password","file","callApi","fetch","body","json","status","Error","message","handleSubmit","e","preventDefault","formData","FormData","name","append","console","log","mode","method","headers","JSON","stringify","text","setState","componentDidMount","then","res","express","catch","err","render","logo","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport logo from './logo.svg';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    response: '',\n    post: '',\n    responseToPost: '',\n    username: '',\n    password: '',\n    file: ''\n  };\n\n  componentDidMount() {\n    this.callApi()\n      .then(res => this.setState({ response: res.express }))\n      .catch(err => console.log(err));\n  }\n\n  callApi = async () => {\n    const response = await fetch('/api/hello');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n\n    return body;\n  };\n\n  handleSubmit = async e => {\n    e.preventDefault();\n    var formData= new FormData()\n    \n    for (let name in this.state) {\n      formData.append(name, this.state[name]);\n    }\n    console.log(formData)\n    const response = await fetch('/api/world', {\n      mode: 'no-cors',\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        post: this.state.post,\n        username:this.state.username,\n        password:this.state.password,\n        file:this.state.file\n      }),\n    });\n    const body = await response.text();\n\n    this.setState({ responseToPost: body });\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n        <p>{this.state.response}</p>\n        <form onSubmit={this.handleSubmit}>\n          <p>\n            <strong>Post to Server:</strong>\n          </p>\n          <input\n            placeholder=\"enter a text\"\n            type=\"text\"\n            value={this.state.post}\n            onChange={e => this.setState({ post: e.target.value })}\n          />\n          <hr />\n          <input\n            placeholder=\"enter a username\"\n            type=\"text\"\n            value={this.state.username}\n            onChange={e => this.setState({ username: e.target.value })}\n          />\n          <hr />\n          <input\n            placeholder=\"enter the password\"\n            type=\"password\"\n            value={this.state.password}\n            onChange={e => this.setState({ password: e.target.value })}\n          /><hr />\n          {/* <input\n            type=\"file\"\n            value={this.state.file}\n            onChange={e => this.setState({ file: e.target.value })}\n          /><hr /> */}\n          <button type=\"submit\">Submit</button>\n        </form>\n        <p>{this.state.responseToPost}</p>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}